USER DEFINE EXCEPTION:
======================
	- WHEN WE CREATE OUR OWN EXCEPTION NAME AND RAISE EXPLICITLY WHENEVER ISREQUIRED.THESE TYPE OF EXCEPTIONS ARE CALLED AS USER DEFINE EXCEPTIONS.
	- GENERALLY IF WE WANT TO RETURN MESSAGE  AS PER CLIENT BUSSINESS RULES THEN WE MUST 
USE USER DEFINE EXCEPTIONS.
	- TO CREATE A USER DEFINE EXCEPTION NAME THEN WE FOLLOW THE FOLLOWING THREE STEPS ARE,

STEP1: DECLARE USER DEFINE EXCEPTION NAME:
==========================================
SYNTAX:
---------------
	<UD EXCEPTION NAME> EXCEPTION;

EX:
	Ex EXCEPTION;


STEP2: RAISE UD EXCEPTION:
==========================
SYNTAX:
---------------
	RAISE <UD EXCEPTION NAME>;

EX: 
	RAISE  Ex;

STEP3: HANDLING UD EXCEPTION:
=============================
SYNTAX:
--------------
	WHEN <UD EXCEPTION NAME> THEN
	<STATEMENTS>;
	END;	
	/

EX:
	WHEN Ex THEN
	DBMS_OUTPUT.PUT_LINE('UD MESSAGE');
	END;
	/

EX:
 DECLARE 
 X INT;
 Y INT;
 Z INT;
 EX EXCEPTION;--------------(1)
 BEGIN
 X:=&X;
 Y:=&Y;
 IF Y=0 THEN
 RAISE EX;----------------(2)
 ELSE
 Z:=X/Y;
 DBMS_OUTPUT.PUT_LINE(Z);
 END IF;
 EXCEPTION
 WHEN EX THEN-------------(3)
 DBMS_OUTPUT.PUT_LINE('SECOND NUMBER NOT BE ZERO');
 END;
 /
RAISE_APPLICATION_ERROR(NUMBER,MESSAGE):
==========================================
	- IT IS A PRE-DEFINE METHOD WHICH IS USED TO DISPLAY A USER DEFINE EXCEPTION INFORMATION IN FORM OF ORACLE FORMAT.
	- RAISE STATEMENT IS USED TO RAISE EXCEPTION AND ALSO HANDLING EXCEPTION WHERE AS RIASE_APPLICATION_ERROR() STATEMENT IS USED TO RAISE EXCEPTION BUT NOT HANDLING EXCEPTION.

	- THIS METHOD IS HAVING TWO ARGUMENTS ARE NUMBER AND MESSAGE.
Here,
NUMBER - NUMBER SHOULD BE -20001 TO -20999
MESSAGE - USER DEFINE EXCEPTION MESSAGE.

EX:
DECLARE 
X INT;
Y INT;
Z INT;
EX EXCEPTION;
BEGIN
X:=&X;
Y:=&Y;
IF Y=0 THEN
RAISE EX;
ELSE
Z:=X/Y;
DBMS_OUTPUT.PUT_LINE(Z);
END IF;
EXCEPTION
WHEN EX THEN
RAISE_APPLICATION_ERROR(-20457,'SECOND NUMBER NOT BE ZERO');
END;
/

Enter value for x: 10
Enter value for y: 0
ERROR at line 1:
ORA-20457: SECOND NUMBER NOT BE ZERO
ORA-06512: at line 17

PRAGMA EXCEPTION_INIT(UNNAMED EXCEPTION):
==========================================
	- IN ORACLE IF WE WANT TO HANDLE OTHER THAN ORACLE PRE-DEFINE EXCEPTION NAME ERRORS
THEN WE MUST USE "UNNAMED EXCEPTION" METHOD.IN THIS METHOD WE MUST CREATE A USER DEFINE EXCEPTION AND ASSOCIATE THIS EXCEPTION NAME ALONG WITH SOME ERROR NUMBER BY USING "PRAGMA EXCEPTION_INIT" METHOD.THIS METHOD IS HAVING TWO ARGUMENTS ARE,

SYNTAX:
---------------
PRAGMA EXCEPTION_INIT(<USER DEFINE EXCEPTION NAME>, ERROR NUMBER)

EX:
DECLARE
X EXCEPTION;
PRAGMA EXCEPTION_INIT(X,-2291);
BEGIN
INSERT INTO EMP(EMPNO,ENAME,DEPTNO)VALUES(1122,'SAI',50);
EXCEPTION
WHEN X THEN
DBMS_OUTPUT.PUT_LINE('NOT ALLOWED INTO EMP TABLE BECAUSE PARENT KEY IS NOT FOUND');
END;
/

NOTE: IN THE ABOVE PL/SQL PROGRAM TO HANDLE -2291 ERROR THEN USE THE EXCEPTION NAME IS "X".

EXCEPTION PROPAGATION:
=======================
	- EXCEPTION BLOCK HANDLES EXCEPTION WHICH WAS RAISED IN BODY(EXECUTION BLOCK) BUT CANNOT HANDLE EXCEPTION WHICH WILL RAISE IN DECLARATION BLOCK.
	
EX:
DECLARE 
X VARCHAR2(3):='PQRS';
BEGIN
DBMS_OUTPUT.PUT_LINE(X);
EXCEPTION
WHEN VALUE_ERROR THEN
DBMS_OUTPUT.PUT_LINE('INVALID STRING LENGTH');
END;
/

ERROR at line 1:
ORA-06502: PL/SQL: numeric or value error: character string buffer too small.

- TO OVERCOME THE ABOVE PROBLEM WE NEED TO PREPARE NESTED PL/SQL BLOCK TO HANDLE EXCEPTION WHICH WAS RAISED IN DECLARATION BLOCK THIS IS CALLED AS EXCEPTION PROPAGATION.

SOL:
BEGIN
DECLARE 
X VARCHAR2(3):='PQRS';
BEGIN
DBMS_OUTPUT.PUT_LINE(X);
EXCEPTION
WHEN VALUE_ERROR THEN
DBMS_OUTPUT.PUT_LINE('INVALID STRING LENGTH');
END;
EXCEPTION
WHEN VALUE_ERROR THEN
DBMS_OUTPUT.PUT_LINE('STRING LENGTH IS GREATER THAN THE SIZE OF VARIABLE X');
END;
/

OUTPUT:
STRING LENGTH IS GREATER THAN THE SIZE OF VARIABLE X.

NOTE:
=====
	- IN PL/SQL EXCEPTIONS ARE OCCURRED IN EXECUTION BLOCK,DECLARATION BLOCK.WHENEVER EXCEPTIONS ARE OCCURRED IN EXECUTION BLOCK THOSE EXCEPTIONS ARE HANDLED IN INNER BLOCK WHERE AS WHEN EXCEPTIONS ARE OCCURED IN DECLARATION BLOCK THOSE EXCEPTIONS ARE
HANDLED IN OUTER BLOCK ONLY.THIS MECHANISM IS CALLED AS "EXCEPTION PROPAGATION".



























































